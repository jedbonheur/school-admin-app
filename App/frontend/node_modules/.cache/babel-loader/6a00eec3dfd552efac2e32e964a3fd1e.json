{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Admin/AdminAddAnnouncement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport { AppContext } from '../../contexts/AppContext';\nimport { MyTextInput, MySelect, DatePickerField, FileInput } from '../UIs/FormInputs';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios'); // And now we can use these\n\n\nconst AdminAddAnnouncement = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Announcement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        announcement: '',\n        destination: ''\n      },\n      validationSchema: Yup.object({\n        announcement: Yup.string().min(15, 'Must be at least 10 characters').required('Required'),\n        destination: Yup.string().oneOf(['teachers', 'students'], 'Invalid Destination').required('Required')\n      }),\n      onSubmit: values => {\n        const formParams = { ...values\n        };\n        const id = user._id;\n        const studentPath = 'add-announcement-students';\n        const teacherPath = 'add-announcement-teachers';\n        axios.postform(`${values.destination === 'teachers' ? teacherPath : studentPath}/` + id, formParams).then(function (response) {\n          if (response.status === 200) {\n            navigate(\"/student/thankyou\", {\n              replace: true,\n              state: 'Thank you for your Application'\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      },\n      children: _ref => {\n        let {\n          setFieldValue\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-form\",\n            children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Announcement\",\n              name: \"announcement\",\n              type: \"text\",\n              placeholder: \"Announcement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n              label: \"Destination\",\n              name: \"destination\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"teachers\",\n                children: \"Teachers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"students\",\n                children: \"Students\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n              label: \"Upload Anouncement\",\n              name: \"announcement_file\",\n              type: \"file\",\n              accept: \"application/pdf\",\n              required: true,\n              onChange: event => {\n                setFieldValue(\"announcement_file\", event.currentTarget.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminAddAnnouncement, \"sNm4/L9ZutY5PLpyR1TO6AhW0+c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AdminAddAnnouncement;\nexport default AdminAddAnnouncement;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminAddAnnouncement\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Admin/AdminAddAnnouncement.js"],"names":["React","useEffect","useContext","Formik","Form","AppContext","MyTextInput","MySelect","DatePickerField","FileInput","Yup","useNavigate","axios","require","AdminAddAnnouncement","user","navigate","announcement","destination","object","string","min","required","oneOf","values","formParams","id","_id","studentPath","teacherPath","postform","then","response","status","replace","state","catch","error","console","log","setFieldValue","event","currentTarget","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,eAAhC,EAAiDC,SAAjD,QAAiE,mBAAjE;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,WAAR,QAA2B,kBAA3B;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM;AACNC,IAAAA;AADM,MAEHb,UAAU,CAACG,UAAD,CAFb;AAGA,QAAMW,QAAQ,GAAGL,WAAW,EAA5B;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbM,QAAAA,YAAY,EAAE,EADD;AAEbC,QAAAA,WAAW,EAAE;AAFA,OADjB;AAME,MAAA,gBAAgB,EAAER,GAAG,CAACS,MAAJ,CAAW;AAC3BF,QAAAA,YAAY,EAAEP,GAAG,CAACU,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqB,gCAArB,EAAuDC,QAAvD,CAAgE,UAAhE,CADa;AAE3BJ,QAAAA,WAAW,EAAER,GAAG,CAACU,MAAJ,GAAaG,KAAb,CAAmB,CAAC,UAAD,EAAa,UAAb,CAAnB,EAA4C,qBAA5C,EAAmED,QAAnE,CAA4E,UAA5E;AAFc,OAAX,CANpB;AAWE,MAAA,QAAQ,EAAGE,MAAD,IAAY;AACtB,cAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,SAAnB;AACA,cAAME,EAAE,GAAGX,IAAI,CAACY,GAAhB;AACC,cAAMC,WAAW,GAAG,2BAApB;AACA,cAAMC,WAAW,GAAG,2BAApB;AACDjB,QAAAA,KAAK,CAACkB,QAAN,CAAgB,GAAEN,MAAM,CAACN,WAAP,KAAuB,UAAvB,GAAoCW,WAApC,GAAkDD,WAAY,GAAjE,GAAqEF,EAApF,EAAwFD,UAAxF,EACCM,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB,cAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACzBjB,YAAAA,QAAQ,CAAC,mBAAD,EAAsB;AAAEkB,cAAAA,OAAO,EAAE,IAAX;AAAiBC,cAAAA,KAAK,EAAE;AAAxB,aAAtB,CAAR;AACD;AACF,SALD,EAMCC,KAND,CAMO,UAAUC,KAAV,EAAiB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,SARD;AASC,OAzBH;AAAA,gBA6BF;AAAA,YAAC;AAACG,UAAAA;AAAD,SAAD;AAAA,4BACE,QAAC,IAAD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAC,cADR;AAEE,cAAA,IAAI,EAAC,cAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,aAAhB;AAA8B,cAAA,IAAI,EAAC,aAAnC;AAAA,sCACE;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAQ,gBAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,oBADR;AAEE,cAAA,IAAI,EAAC,mBAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,MAAM,EAAC,iBAJT;AAKE,cAAA,QAAQ,MALV;AAME,cAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBD,gBAAAA,aAAa,CAAC,mBAAD,EAAsBC,KAAK,CAACC,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAtB,CAAb;AACD;AARH;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAyBA;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AA7BE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgED,CArED;;GAAM7B,oB;UAIaH,W;;;KAJbG,oB;AAuEN,eAAeA,oBAAf","sourcesContent":["import React, {useEffect,useContext} from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport {AppContext} from '../../contexts/AppContext'\r\nimport { MyTextInput, MySelect, DatePickerField, FileInput} from '../UIs/FormInputs'\r\nimport * as Yup from 'yup';\r\nimport {useNavigate } from 'react-router-dom';\r\nconst axios = require('axios')\r\n\r\n// And now we can use these\r\nconst AdminAddAnnouncement = () => {\r\n  const {\r\n  user,\r\n } = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <h2>Add Announcement</h2>\r\n      <Formik\r\n        initialValues={{\r\n          announcement: '',\r\n          destination: '',\r\n        }}\r\n\r\n        validationSchema={Yup.object({\r\n          announcement: Yup.string().min(15, 'Must be at least 10 characters').required('Required'),\r\n          destination: Yup.string().oneOf(['teachers', 'students'],'Invalid Destination').required('Required'),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n        const formParams = {...values}\r\n        const id = user._id\r\n         const studentPath = 'add-announcement-students'\r\n         const teacherPath = 'add-announcement-teachers'\r\n        axios.postform(`${values.destination === 'teachers' ? teacherPath : studentPath}/`+ id, formParams)\r\n        .then(function (response) {\r\n          if(response.status === 200){\r\n            navigate(\"/student/thankyou\", { replace: true, state: 'Thank you for your Application' });\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        }}\r\n      \r\n      >\r\n      \r\n   {({setFieldValue}) => (\r\n      <Form>\r\n        <div className=\"flex-form\">\r\n          <MyTextInput\r\n            label=\"Announcement\"\r\n            name=\"announcement\"\r\n            type=\"text\"\r\n            placeholder=\"Announcement\"\r\n          />\r\n          <MySelect label=\"Destination\" name=\"destination\">\r\n            <option value=\"\">Select</option>\r\n            <option value=\"teachers\">Teachers</option>\r\n            <option value=\"students\">Students</option>\r\n          </MySelect>\r\n\r\n          <FileInput \r\n            label=\"Upload Anouncement\"\r\n            name=\"announcement_file\"\r\n            type=\"file\"\r\n            accept='application/pdf'\r\n            required\r\n            onChange={(event) => {\r\n              setFieldValue(\"announcement_file\", event.currentTarget.files[0])\r\n            }}\r\n          /> \r\n        </div>\r\n      <button className=\"btn\"type=\"submit\">Submit</button>\r\n        </Form>\r\n       )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminAddAnnouncement;"]},"metadata":{},"sourceType":"module"}