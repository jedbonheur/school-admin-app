{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Student/StudentProgressBar.js\";\nimport React, { useState } from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentProgressBar = _ref => {\n  let {\n    percentage\n  } = _ref;\n\n  if (!percentage) {\n    return;\n  }\n\n  const value = 0.66;\n  return /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n    value: value,\n    maxValue: 1,\n    text: `${value * 100}%`,\n    styles: buildStyles({\n      // Rotation of path and trail, in number of turns (0-1)\n      rotation: 0.25,\n      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n      strokeLinecap: 'butt',\n      // Text size\n      textSize: '16px',\n      // How long animation takes to go from one percentage to another, in seconds\n      pathTransitionDuration: 0.5,\n      // Can specify path transition in more detail, or remove it entirely\n      // pathTransition: 'none',\n      // Colors\n      pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\n      textColor: '#f88',\n      trailColor: '#d6d6d6',\n      backgroundColor: '#3e98c7'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 1\n  }, this);\n};\n\n_c = StudentProgressBar;\nexport default StudentProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentProgressBar\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Student/StudentProgressBar.js"],"names":["React","useState","CircularProgressbar","buildStyles","StudentProgressBar","percentage","value","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,mBAAT,EAA6BC,WAA7B,QAAgD,4BAAhD;AACA,OAAO,4CAAP;;;AAEA,MAAMC,kBAAkB,GAAG,QAAkB;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;;AAC5C,MAAG,CAACA,UAAJ,EAAe;AACd;AACA;;AACD,QAAMC,KAAK,GAAG,IAAd;AACA,sBAED,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEA,KAA5B;AAAmC,IAAA,QAAQ,EAAE,CAA7C;AAAgD,IAAA,IAAI,EAAG,GAAEA,KAAK,GAAG,GAAI,GAArE;AAEE,IAAA,MAAM,EAAEH,WAAW,CAAC;AAClB;AACAI,MAAAA,QAAQ,EAAE,IAFQ;AAIlB;AACAC,MAAAA,aAAa,EAAE,MALG;AAOlB;AACAC,MAAAA,QAAQ,EAAE,MARQ;AAUlB;AACAC,MAAAA,sBAAsB,EAAE,GAXN;AAalB;AACA;AAEA;AACAC,MAAAA,SAAS,EAAG,sBAAqBN,UAAU,GAAG,GAAI,GAjBhC;AAkBlBO,MAAAA,SAAS,EAAE,MAlBO;AAmBlBC,MAAAA,UAAU,EAAE,SAnBM;AAoBlBC,MAAAA,eAAe,EAAE;AApBC,KAAD;AAFrB;AAAA;AAAA;AAAA;AAAA,UAFC;AA4BA,CAjCD;;KAAMV,kB;AAmCN,eAAeA,kBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { CircularProgressbar,buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst StudentProgressBar = ({percentage}) => {\r\n if(!percentage){\r\n  return\r\n }\r\n const value = 0.66;               \r\n return (\r\n\r\n<CircularProgressbar value={value} maxValue={1} text={`${value * 100}%`}\r\n\r\n  styles={buildStyles({\r\n    // Rotation of path and trail, in number of turns (0-1)\r\n    rotation: 0.25,\r\n\r\n    // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n    strokeLinecap: 'butt',\r\n\r\n    // Text size\r\n    textSize: '16px',\r\n\r\n    // How long animation takes to go from one percentage to another, in seconds\r\n    pathTransitionDuration: 0.5,\r\n\r\n    // Can specify path transition in more detail, or remove it entirely\r\n    // pathTransition: 'none',\r\n\r\n    // Colors\r\n    pathColor: `rgba(62, 152, 199, ${percentage / 100})`,\r\n    textColor: '#f88',\r\n    trailColor: '#d6d6d6',\r\n    backgroundColor: '#3e98c7',\r\n  })}\r\n/>\r\n )\r\n}\r\n\r\nexport default StudentProgressBar;"]},"metadata":{},"sourceType":"module"}