{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Forms/StudentApplicationForm.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { MyTextInput, MyCheckbox, MySelect } from '../UIs/FormInputs';\nimport * as Yup from 'yup'; // And now we can use these\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentApplicationForm = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Subscribe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        acceptedTerms: false,\n        // added for our checkbox\n        jobType: '' // added for our select\n\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n        lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        acceptedTerms: Yup.boolean().required('Required').oneOf([true], 'You must accept the terms and conditions.'),\n        jobType: Yup.string().oneOf(['designer', 'development', 'product', 'other'], 'Invalid Job Type').required('Required')\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"First Name\",\n          name: \"firstName\",\n          type: \"text\",\n          placeholder: \"Jane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          type: \"text\",\n          placeholder: \"Doe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"Email Address\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"jane@formik.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n          label: \"Job Type\",\n          name: \"jobType\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a job type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"designer\",\n            children: \"Designer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"development\",\n            children: \"Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"product\",\n            children: \"Product Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyCheckbox, {\n          name: \"acceptedTerms\",\n          children: \"I accept the terms and conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = StudentApplicationForm;\nexport default StudentApplicationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentApplicationForm\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Forms/StudentApplicationForm.js"],"names":["React","Formik","Form","MyTextInput","MyCheckbox","MySelect","Yup","StudentApplicationForm","firstName","lastName","email","acceptedTerms","jobType","object","string","max","required","boolean","oneOf","values","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { MyTextInput, MyCheckbox, MySelect} from '../UIs/FormInputs'\r\nimport * as Yup from 'yup';\r\n\r\n// And now we can use these\r\nconst StudentApplicationForm = () => {\r\n  return (\r\n    <>\r\n      <h1>Subscribe!</h1>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          acceptedTerms: false, // added for our checkbox\r\n          jobType: '', // added for our select\r\n        }}\r\n        validationSchema={Yup.object({\r\n          firstName: Yup.string()\r\n            .max(15, 'Must be 15 characters or less')\r\n            .required('Required'),\r\n          lastName: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          acceptedTerms: Yup.boolean()\r\n            .required('Required')\r\n            .oneOf([true], 'You must accept the terms and conditions.'),\r\n          jobType: Yup.string()\r\n            .oneOf(\r\n              ['designer', 'development', 'product', 'other'],\r\n              'Invalid Job Type'\r\n            )\r\n            .required('Required'),\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <Form>\r\n          <MyTextInput\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            placeholder=\"Jane\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            placeholder=\"Doe\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"jane@formik.com\"\r\n          />\r\n\r\n          <MySelect label=\"Job Type\" name=\"jobType\">\r\n            <option value=\"\">Select a job type</option>\r\n            <option value=\"designer\">Designer</option>\r\n            <option value=\"development\">Developer</option>\r\n            <option value=\"product\">Product Manager</option>\r\n            <option value=\"other\">Other</option>\r\n          </MySelect>\r\n\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentApplicationForm;"]},"metadata":{},"sourceType":"module"}