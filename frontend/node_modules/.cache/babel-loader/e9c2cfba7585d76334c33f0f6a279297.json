{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Admin/AddClassForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport { MyTextInput, MySelect } from '../UIs/FormInputs';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios'); // And now we can use these\n\n\nconst AddClassForm = () => {\n  _s();\n\n  const departments = ['Computer Science', 'software engineering', 'networking', 'web development', 'bootcamp'];\n  const instructors = ['Brian Jonhson', 'Eric White', 'Justin Green', 'Luke Taylor', 'Christina Green', ''];\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        course_name: '',\n        course_depertment: '',\n        instructor: ''\n      },\n      validationSchema: Yup.object({\n        course_name: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n        course_depertment: Yup.string().oneOf(['male', 'female'], 'Invalid gender').required('Required'),\n        instructor: Yup.string().oneOf(['male', 'female'], 'Invalid gender').required('Required')\n      }),\n      onSubmit: values => {\n        const formParams = { ...values\n        };\n        console.log(formParams); // axios.postForm('/addCourse', formParams)\n        // .then(function (response) {\n        //   if(response.status === 200){\n        //     navigate(\"/student/thankyou\", { replace: true, state: 'Thank you for your Application' });\n        //   }\n        // })\n        // .catch(function (error) {\n        //   console.log(error);\n        // });\n      },\n      children: _ref => {\n        let {\n          setFieldValue\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-form\",\n            children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Course Name\",\n              name: \"course_name\",\n              type: \"text\",\n              placeholder: \"Java Script\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n              label: \"Department\",\n              name: \"course_depertment\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 12\n              }, this), departments.map(department => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: department,\n                  children: department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 22\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n              label: \"Instructor\",\n              name: \"instructor\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 12\n              }, this), instructors.map(instructor => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: instructor,\n                  children: instructor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 22\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddClassForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddClassForm;\nexport default AddClassForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClassForm\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Admin/AddClassForm.js"],"names":["React","useEffect","Formik","Form","MyTextInput","MySelect","Yup","useNavigate","axios","require","AddClassForm","departments","instructors","navigate","course_name","course_depertment","instructor","object","string","max","required","oneOf","values","formParams","console","log","setFieldValue","map","department"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAqC,mBAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,WAAR,QAA2B,kBAA3B;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,WAAW,GAAG,CAAC,kBAAD,EAAqB,sBAArB,EAA6C,YAA7C,EAA2D,iBAA3D,EAA8E,UAA9E,CAApB;AACA,QAAMC,WAAW,GAAG,CAAC,eAAD,EAAkB,YAAlB,EAAgC,cAAhC,EAAgD,aAAhD,EAA+D,iBAA/D,EAAkF,EAAlF,CAApB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbO,QAAAA,WAAW,EAAE,EADA;AAEbC,QAAAA,iBAAiB,EAAE,EAFN;AAGbC,QAAAA,UAAU,EAAE;AAHC,OADjB;AAOE,MAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,CAAW;AAC3BH,QAAAA,WAAW,EAAER,GAAG,CAACY,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqB,+BAArB,EAAsDC,QAAtD,CAA+D,UAA/D,CADc;AAE3BL,QAAAA,iBAAiB,EAAET,GAAG,CAACY,MAAJ,GAAaG,KAAb,CAAmB,CAAC,MAAD,EAAS,QAAT,CAAnB,EAAsC,gBAAtC,EAAwDD,QAAxD,CAAiE,UAAjE,CAFQ;AAG3BJ,QAAAA,UAAU,EAAEV,GAAG,CAACY,MAAJ,GAAaG,KAAb,CAAmB,CAAC,MAAD,EAAS,QAAT,CAAnB,EAAsC,gBAAtC,EAAwDD,QAAxD,CAAiE,UAAjE;AAHe,OAAX,CAPpB;AAaE,MAAA,QAAQ,EAAGE,MAAD,IAAY;AACtB,cAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,SAAnB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAFsB,CAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,OAzBH;AAAA,gBA4BF;AAAA,YAAC;AAACG,UAAAA;AAAD,SAAD;AAAA,4BACE,QAAC,IAAD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAC,aADR;AAEE,cAAA,IAAI,EAAC,aAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,YAAhB;AAA6B,cAAA,IAAI,EAAC,mBAAlC;AAAA,sCACC;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAGGf,WAAW,CAACgB,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,oCAAO;AAAQ,kBAAA,KAAK,EAAEA,UAAf;AAAA,4BAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,wBAAP;AACA,eAFD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eAiBE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,YAAhB;AAA6B,cAAA,IAAI,EAAC,YAAlC;AAAA,sCACC;AAAQ,gBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAGGhB,WAAW,CAACe,GAAZ,CAAgBX,UAAU,IAAI;AAC7B,oCAAO;AAAQ,kBAAA,KAAK,EAAEA,UAAf;AAAA,4BAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,wBAAP;AACA,eAFD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA4BG;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AA5BE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkED,CAtED;;GAAMN,Y;UAGaH,W;;;KAHbG,Y;AAwEN,eAAeA,YAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { MyTextInput, MySelect} from '../UIs/FormInputs'\r\nimport * as Yup from 'yup';\r\nimport {useNavigate } from 'react-router-dom';\r\nconst axios = require('axios')\r\n\r\n// And now we can use these\r\nconst AddClassForm = () => {\r\n  const departments = ['Computer Science', 'software engineering', 'networking', 'web development', 'bootcamp']\r\n  const instructors = ['Brian Jonhson', 'Eric White', 'Justin Green', 'Luke Taylor', 'Christina Green', '']\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <h2>Apply</h2>\r\n      <Formik\r\n        initialValues={{\r\n          course_name: '',\r\n          course_depertment: '',\r\n          instructor: '',\r\n        }}\r\n\r\n        validationSchema={Yup.object({\r\n          course_name: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\r\n          course_depertment: Yup.string().oneOf(['male', 'female'],'Invalid gender').required('Required'),\r\n          instructor: Yup.string().oneOf(['male', 'female'],'Invalid gender').required('Required'),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n        const formParams = {...values}\r\n        console.log(formParams)\r\n        // axios.postForm('/addCourse', formParams)\r\n        // .then(function (response) {\r\n        //   if(response.status === 200){\r\n        //     navigate(\"/student/thankyou\", { replace: true, state: 'Thank you for your Application' });\r\n        //   }\r\n        // })\r\n        // .catch(function (error) {\r\n        //   console.log(error);\r\n        // });\r\n        }}\r\n      >\r\n      \r\n   {({setFieldValue}) => (\r\n      <Form>\r\n        <div className=\"flex-form\">\r\n          <MyTextInput\r\n            label=\"Course Name\"\r\n            name=\"course_name\"\r\n            type=\"text\"\r\n            placeholder=\"Java Script\"\r\n          />\r\n\r\n          <MySelect label=\"Department\" name=\"course_depertment\">\r\n           <option value=\"\">Select</option>\r\n            {\r\n             departments.map(department => {\r\n              return <option value={department}>{department}</option>\r\n             })\r\n            }\r\n          </MySelect>\r\n\r\n          <MySelect label=\"Instructor\" name=\"instructor\">\r\n           <option value=\"\">Select</option>\r\n            {\r\n             instructors.map(instructor => {\r\n              return <option value={instructor}>{instructor}</option>\r\n             })\r\n            }\r\n          </MySelect> \r\n\r\n        </div>\r\n         <button className=\"btn\"type=\"submit\">Submit</button>\r\n        </Form>\r\n       )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddClassForm;"]},"metadata":{},"sourceType":"module"}