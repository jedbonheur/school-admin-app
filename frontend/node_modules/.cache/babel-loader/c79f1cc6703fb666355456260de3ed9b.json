{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Forms/StudentApplicationForm.js\";\nimport React, { useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport { MyTextInput, MySelect, DatePickerField, FileInput } from '../UIs/FormInputs';\nimport * as Yup from 'yup'; // And now we can use these\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentApplicationForm = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Subscribe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        fname: '',\n        lname: '',\n        gender: '',\n        email: '',\n        dob: '',\n        program: '',\n        semester: '',\n        address: ''\n      },\n      validationSchema: Yup.object({\n        fname: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n        lname: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n        gender: Yup.string().oneOf(['male', 'female'], 'Invalid gender').required('Required'),\n        email: Yup.string().email('Invalid email address').required('Required'),\n        dob: Yup.date().required('Required'),\n        program: Yup.string().oneOf(['computer_science', 'software_engineering', 'coding_bootcamp'], 'Invalid program').required('Required'),\n        semester: Yup.string().oneOf(['spring_2022', 'summer_2022', 'fall_2022', 'winter_2023'], 'Invalid intake').required('Required'),\n        address: Yup.string().required('address')\n      }),\n      onSubmit: values => {\n        console.log('clicked');\n        const formParams = { ...values\n        };\n        console.log('formParams', formParams);\n        fetch('/apply', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'multipart/form-data; boundary=X-INSOMNIA-BOUNDARY',\n            'Accept': '*/*'\n          },\n          body: JSON.stringify(formParams)\n        }).then(() => {\n          console.log('submitted');\n        });\n      },\n      children: _ref => {\n        let {\n          setFieldValue\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"First Name\",\n            name: \"fname\",\n            type: \"text\",\n            placeholder: \"Jane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Last Name\",\n            name: \"lname\",\n            type: \"text\",\n            placeholder: \"Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Address\",\n            name: \"address\",\n            type: \"text\",\n            placeholder: \"1245 rue crevier N5H0R4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n            label: \"Gender\",\n            name: \"gender\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n            label: \"Email Address\",\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"jane@formik.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DatePickerField, {\n            label: \"Date of Birth\",\n            name: \"dob\",\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n            label: \"Program\",\n            name: \"program\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"computer_science\",\n              children: \"Computer science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"software_engineering\",\n              children: \"Software engineering\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"coding_bootcamp\",\n              children: \"Coding BootCamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n            label: \"Semester\",\n            name: \"semester\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"spring_2022\",\n              children: \"spring-2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"summer_2022\",\n              children: \"summer-2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fall_2022\",\n              children: \"fall-2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"winter_2023\",\n              children: \"winter-2023\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n            label: \"Upload User Photo\",\n            name: \"user_photo\",\n            type: \"file\",\n            accept: \"image/*\",\n            id: \"user_photo\",\n            onChange: event => {\n              setFieldValue(\"user_photo\", event.currentTarget.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FileInput, {\n            label: \"Motivational Letter\",\n            name: \"motivational_letter\",\n            type: \"file\",\n            accept: \"application/pdf\",\n            id: \"motivational_letter\",\n            onChange: event => {\n              console.log('event', event.currentTarget.files);\n              setFieldValue(\"motivational_letter\", event.currentTarget.files[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = StudentApplicationForm;\nexport default StudentApplicationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentApplicationForm\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/Forms/StudentApplicationForm.js"],"names":["React","useEffect","Formik","Form","MyTextInput","MySelect","DatePickerField","FileInput","Yup","StudentApplicationForm","fname","lname","gender","email","dob","program","semester","address","object","string","max","required","oneOf","date","values","console","log","formParams","fetch","method","headers","body","JSON","stringify","then","setFieldValue","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { MyTextInput, MySelect, DatePickerField, FileInput} from '../UIs/FormInputs'\r\nimport * as Yup from 'yup';\r\n\r\n// And now we can use these\r\nconst StudentApplicationForm = () => {\r\n  return (\r\n    <>\r\n      <h1>Subscribe!</h1>\r\n      <Formik\r\n        initialValues={{\r\n          fname: '',\r\n          lname: '',\r\n          gender: '',\r\n          email: '',\r\n          dob: '',\r\n          program:'',\r\n          semester:'',\r\n          address:'',\r\n        }}\r\n\r\n        validationSchema={Yup.object({\r\n          fname: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\r\n          lname: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\r\n          gender: Yup.string().oneOf(['male', 'female'],'Invalid gender').required('Required'),\r\n          email: Yup.string().email('Invalid email address').required('Required'),\r\n          dob: Yup.date().required('Required'),\r\n          program: Yup.string().oneOf(['computer_science', 'software_engineering','coding_bootcamp'],'Invalid program').required('Required'),\r\n          semester: Yup.string().oneOf(['spring_2022', 'summer_2022','fall_2022','winter_2023'],'Invalid intake').required('Required'),\r\n          address: Yup.string().required('address'),\r\n        })}\r\n\r\n        onSubmit={(values) => {\r\n         console.log('clicked')\r\n         const formParams = {...values}\r\n         console.log('formParams',formParams)\r\n         fetch('/apply', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data; boundary=X-INSOMNIA-BOUNDARY',\r\n              'Accept': '*/*'\r\n            },\r\n            body: JSON.stringify(formParams),\r\n          })\r\n          .then(() => {\r\n            console.log('submitted')\r\n          });\r\n        }}\r\n      >\r\n       {({setFieldValue}) => (\r\n       <Form>\r\n          <MyTextInput\r\n            label=\"First Name\"\r\n            name=\"fname\"\r\n            type=\"text\"\r\n            placeholder=\"Jane\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Last Name\"\r\n            name=\"lname\"\r\n            type=\"text\"\r\n            placeholder=\"Doe\"\r\n          />\r\n           <MyTextInput\r\n            label=\"Address\"\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder=\"1245 rue crevier N5H0R4\"\r\n          />\r\n\r\n          <MySelect label=\"Gender\" name=\"gender\">\r\n            <option value=\"\">Select</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n          </MySelect>\r\n\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"jane@formik.com\"\r\n          />\r\n\r\n          <DatePickerField\r\n            label=\"Date of Birth\"\r\n            name=\"dob\"\r\n            type=\"date\"\r\n          />\r\n          <MySelect label=\"Program\" name=\"program\">\r\n            <option value=\"\">Select</option>\r\n            <option value=\"computer_science\">Computer science</option>\r\n            <option value=\"software_engineering\">Software engineering</option>\r\n            <option value=\"coding_bootcamp\">Coding BootCamp</option>\r\n          </MySelect>\r\n\r\n          <MySelect label=\"Semester\" name=\"semester\">\r\n            <option value=\"\">Select</option>\r\n            <option value=\"spring_2022\">spring-2022</option>\r\n            <option value=\"summer_2022\">summer-2022</option>\r\n            <option value=\"fall_2022\">fall-2022</option>\r\n            <option value=\"winter_2023\">winter-2023</option>\r\n          </MySelect>\r\n          <FileInput \r\n            label=\"Upload User Photo\"\r\n            name=\"user_photo\"\r\n            type=\"file\"\r\n            accept='image/*'\r\n            id=\"user_photo\"\r\n            onChange={(event) => {\r\n              setFieldValue(\"user_photo\", event.currentTarget.files[0])\r\n            }}\r\n          /> \r\n          <FileInput \r\n            label=\"Motivational Letter\"\r\n            name=\"motivational_letter\"\r\n            type=\"file\"\r\n            accept='application/pdf'\r\n            id=\"motivational_letter\"\r\n            onChange={(event) => {\r\n              console.log('event',event.currentTarget.files)\r\n              setFieldValue(\"motivational_letter\", event.currentTarget.files[0])\r\n            }}\r\n          /> \r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n       )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentApplicationForm;"]},"metadata":{},"sourceType":"module"}