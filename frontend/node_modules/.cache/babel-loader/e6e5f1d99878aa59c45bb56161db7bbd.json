{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/contexts/AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext(null);\nexport const AppContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [showSmallSidebar, setShowSmallSidebar] = useState(false);\n  const [user, setUser] = useState([]);\n  const isSmallDevice = useMediaQuery({\n    query: '(max-width: 768px)'\n  });\n  useEffect(() => {\n    if (isSmallDevice) {\n      setShowSmallSidebar(true);\n    }\n  }, [isSmallDevice]); // if(isSmallDevice){\n  //    setShowSmallSidebar(true)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      showSmallSidebar,\n      setShowSmallSidebar,\n      user,\n      setUser,\n      isSmallDevice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppContextProvider, \"f0+gpYXcOaTASYOVEXYK9tSWsns=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/contexts/AppContext.js"],"names":["React","useState","useEffect","useMediaQuery","AppContext","createContext","AppContextProvider","children","showSmallSidebar","setShowSmallSidebar","user","setUser","isSmallDevice","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,OAAO,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAAnB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,aAAa,GAAGT,aAAa,CAAC;AAAEU,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAnC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,aAAH,EAAiB;AACbH,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACF,GAJQ,EAIN,CAACG,aAAD,CAJM,CAAT,CALkD,CAWlD;AACA;AACA;;AACA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAC3BJ,MAAAA,gBAD2B;AAE3BC,MAAAA,mBAF2B;AAG3BC,MAAAA,IAH2B;AAI3BC,MAAAA,OAJ2B;AAK3BC,MAAAA;AAL2B,KAA5B;AAAA,cAOGL;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBM;;GAAMD,kB;UAGWH,a;;;KAHXG,kB","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nexport const AppContext = React.createContext(null);\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [showSmallSidebar, setShowSmallSidebar] = useState(false)\r\n  const [user, setUser] = useState([])\r\n  const isSmallDevice = useMediaQuery({ query: '(max-width: 768px)' })\r\n\r\n  useEffect(() => {\r\n    if(isSmallDevice){\r\n        setShowSmallSidebar(true)\r\n    }\r\n  }, [isSmallDevice]);\r\n\r\n  // if(isSmallDevice){\r\n  //    setShowSmallSidebar(true)\r\n  // }\r\n  return (\r\n    <AppContext.Provider value={{\r\n     showSmallSidebar,\r\n     setShowSmallSidebar,\r\n     user,\r\n     setUser,\r\n     isSmallDevice\r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}