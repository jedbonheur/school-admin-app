{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/contexts/AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMediaQuery } from 'react-responsive';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext(null);\nexport const AppContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userAccessGet2, setUserAccessGet2] = useState(reactLocalStorage.getObject('userAccess')); // !_.isEmpty(userAccessGet2)\n\n  const [authGate1, setAuthGate1] = useState(false);\n  const [authGate2, setAuthGate2] = useState(_.isEmpty(userAccessGet2) ? false : userAccessGet2);\n  const [showSmallSidebar, setShowSmallSidebar] = useState(false);\n  const [user, setUser] = useState([]);\n  const isMobile = useMediaQuery({\n    query: '(max-width: 1024px)'\n  });\n  const [mobileNav, setMobileNav] = useState(isMobile);\n  const [showNav, setShowNav] = useState(false);\n  const [logout, setLogout] = useState('loggedin');\n  useEffect(() => {\n    setMobileNav(isMobile);\n  }, [isMobile]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      showSmallSidebar,\n      setShowSmallSidebar,\n      user,\n      setUser,\n      mobileNav,\n      setMobileNav,\n      showNav,\n      setShowNav,\n      isMobile,\n      authGate1,\n      authGate2,\n      setAuthGate1,\n      setAuthGate2,\n      setUserAccessGet2,\n      setLogout,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppContextProvider, \"mO0tFRrST2N0P0VA2+zp3WG/I6A=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/contexts/AppContext.js"],"names":["React","useState","useEffect","useMediaQuery","reactLocalStorage","_","AppContext","createContext","AppContextProvider","children","userAccessGet2","setUserAccessGet2","getObject","authGate1","setAuthGate1","authGate2","setAuthGate2","isEmpty","showSmallSidebar","setShowSmallSidebar","user","setUser","isMobile","query","mobileNav","setMobileNav","showNav","setShowNav","logout","setLogout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,OAAO,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAAnB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAChDG,iBAAiB,CAACQ,SAAlB,CAA4B,YAA5B,CADgD,CAApD,CADkD,CAIlD;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACI,CAAC,CAACY,OAAF,CAAUP,cAAV,IAA4B,KAA5B,GAAoCA,cAArC,CAA1C;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMqB,QAAQ,GAAInB,aAAa,CAAC;AAAEoB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA/B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAACqB,QAAD,CAA1C;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,UAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,YAAY,CAACH,QAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAC3BJ,MAAAA,gBAD2B;AAE3BC,MAAAA,mBAF2B;AAG3BC,MAAAA,IAH2B;AAI3BC,MAAAA,OAJ2B;AAK3BG,MAAAA,SAL2B;AAM3BC,MAAAA,YAN2B;AAO3BC,MAAAA,OAP2B;AAQ3BC,MAAAA,UAR2B;AAS3BL,MAAAA,QAT2B;AAU3BT,MAAAA,SAV2B;AAW3BE,MAAAA,SAX2B;AAY3BD,MAAAA,YAZ2B;AAa3BE,MAAAA,YAb2B;AAc3BL,MAAAA,iBAd2B;AAe3BkB,MAAAA,SAf2B;AAgB3BD,MAAAA;AAhB2B,KAA5B;AAAA,cAkBGnB;AAlBH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtCM;;GAAMD,kB;UASOL,a;;;KATPK,kB","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport {reactLocalStorage} from 'reactjs-localstorage';\r\nimport _ from 'lodash';\r\n\r\nexport const AppContext = React.createContext(null);\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [userAccessGet2, setUserAccessGet2] = useState(\r\n      reactLocalStorage.getObject('userAccess')\r\n  )\r\n  // !_.isEmpty(userAccessGet2)\r\n  const [authGate1, setAuthGate1] = useState(false)\r\n  const [authGate2, setAuthGate2] = useState(_.isEmpty(userAccessGet2) ? false : userAccessGet2)\r\n  const [showSmallSidebar, setShowSmallSidebar] = useState(false)\r\n  const [user, setUser] = useState([])\r\n  const isMobile  = useMediaQuery({ query: '(max-width: 1024px)' })\r\n  const [mobileNav, setMobileNav] = useState(isMobile)\r\n  const [showNav, setShowNav] = useState(false)\r\n  const [logout, setLogout] = useState('loggedin')\r\n  useEffect(() => {\r\n    setMobileNav(isMobile)\r\n  }, [isMobile]);\r\n  return (\r\n    <AppContext.Provider value={{\r\n     showSmallSidebar,\r\n     setShowSmallSidebar,\r\n     user,\r\n     setUser,\r\n     mobileNav,\r\n     setMobileNav,\r\n     showNav,\r\n     setShowNav,\r\n     isMobile,\r\n     authGate1,\r\n     authGate2,\r\n     setAuthGate1,\r\n     setAuthGate2,\r\n     setUserAccessGet2,\r\n     setLogout,\r\n     logout\r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}