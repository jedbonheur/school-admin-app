{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/UIs/StudentAssignments.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { Slide } from 'react-slideshow-image';\nimport 'react-slideshow-image/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentAssignments = _ref => {\n  let {\n    courses\n  } = _ref;\n  let newAssignment = [];\n\n  if (!courses) {\n    return;\n  }\n\n  const AssignmentList = () => {\n    courses.map(course => {\n      return course.assignments.map(assignment => {\n        return newAssignment.push({ ...assignment,\n          ...course\n        });\n      });\n    });\n    return newAssignment;\n  };\n\n  console.log(AssignmentList());\n  const properties = {\n    duration: 1000,\n    transitionDuration: 500,\n    infinite: true,\n    indicators: true\n  };\n\n  const getRandomColor = () => {\n    var lum = -0.25;\n    var hex = String('#' + Math.random().toString(16).slice(2, 8).toUpperCase()).replace(/[^0-9a-f]/gi, '');\n\n    if (hex.length < 6) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    var rgb = \"#\",\n        c,\n        i;\n\n    for (i = 0; i < 3; i++) {\n      c = parseInt(hex.substr(i * 2, 2), 16);\n      c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n      rgb += (\"00\" + c).substr(c.length);\n    }\n\n    return rgb;\n  };\n\n  const randomColor = getRandomColor();\n  return /*#__PURE__*/_jsxDEV(AssignmentWrapper, {\n    randomColor: randomColor,\n    children: /*#__PURE__*/_jsxDEV(Slide, { ...properties,\n      children: newAssignment.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'backgroundImage': randomColor\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: assignment.assignment_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_c = StudentAssignments;\nconst AssignmentWrapper = styled.div`\n background: ${_ref2 => {\n  let {\n    randomColor\n  } = _ref2;\n  return ` ${randomColor}`;\n}};\n`;\n_c2 = AssignmentWrapper;\nexport default StudentAssignments;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StudentAssignments\");\n$RefreshReg$(_c2, \"AssignmentWrapper\");","map":{"version":3,"sources":["/mnt/c/Users/nseng/Desktop/Concordia-bootcamps/school-admin/school-management-system-app/frontend/src/components/UIs/StudentAssignments.js"],"names":["React","styled","Slide","StudentAssignments","courses","newAssignment","AssignmentList","map","course","assignments","assignment","push","console","log","properties","duration","transitionDuration","infinite","indicators","getRandomColor","lum","hex","String","Math","random","toString","slice","toUpperCase","replace","length","rgb","c","i","parseInt","substr","round","min","max","randomColor","index","assignment_code","AssignmentWrapper","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\nconst StudentAssignments = ({courses}) => {\r\n let newAssignment = []\r\n\r\n if(!courses) {\r\n  return\r\n }\r\n const AssignmentList = () => {\r\n  courses.map(course => {\r\n    return course.assignments.map(assignment => {\r\n         return newAssignment.push({...assignment,...course})\r\n         })\r\n  })\r\n  return newAssignment\r\n }\r\n console.log(AssignmentList())\r\n const properties = {\r\n    duration: 1000,\r\n    transitionDuration: 500,\r\n    infinite: true,\r\n    indicators: true,\r\n  };\r\n  const getRandomColor = () => {\r\n    var lum = -0.25;\r\n    var hex = String('#' + Math.random().toString(16).slice(2, 8).toUpperCase()).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    var rgb = \"#\",\r\n        c, i;\r\n    for (i = 0; i < 3; i++) {\r\n        c = parseInt(hex.substr(i * 2, 2), 16);\r\n        c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n        rgb += (\"00\" + c).substr(c.length);\r\n    }\r\n    return rgb;\r\n }\r\n const randomColor = getRandomColor()\r\n return (\r\n  <AssignmentWrapper randomColor={randomColor}>\r\n        <Slide {...properties}>\r\n         {newAssignment.map((assignment, index)=> (\r\n            <div className=\"each-slide\" key={index}>\r\n              <div style={{'backgroundImage': randomColor}}>\r\n                <span>{assignment.assignment_code}</span>\r\n              </div>\r\n            </div>\r\n          ))} \r\n        </Slide>\r\n  </AssignmentWrapper>\r\n );\r\n};\r\n\r\nconst AssignmentWrapper = styled.div`\r\n background: ${({randomColor}) =>` ${randomColor}`};\r\n`\r\nexport default StudentAssignments;"]},"metadata":{},"sourceType":"module"}